const subscriptionPoolSlice = (set) => ({
  softCapTokens: "",
  setSoftCapTokens: (input) => set((state) => ({ softCapTokens: input })),
  hardCapTokens: "",
  setHardCapTokens: (input) => set((state) => ({ hardCapTokens: input })),
  hardCapTokensPerUser: "",
  setHardCapTokensPerUser: (input) =>
    set((state) => ({ hardCapTokensPerUser: input })),
  subscriptionRate: "",
  setSubscriptionRate: (input) => set((state) => ({ subscriptionRate: input })),
  listingRate: "",
  setListingRate: (input) => set((state) => ({ listingRate: input })),
  liquidity: "",
  setLiquidity: (input) => set((state) => ({ liquidity: input })),
  refundType: "0",
  setrefundType: (input) => set((state) => ({ refundType: input })),
  startDate: "",
  setStartDate: (input) => set((state) => ({ startDate: input })),
  endDate: "",
  setEndDate: (input) => set((state) => ({ endDate: input })),
  isWhiteListed: "0",
  setIsWhiteListed: (input) => set((state) => ({ isWhiteListed: input })),
  tokensStatus: "0",
  setTokenStatus: (input) => set((state) => ({ tokensStatus: input })),
  maximumBuy: "",
  router: "PancakeSwap",
  tokenAddress: "",
  preSale: "",
  setPreSale: (input) => set((state) => ({ preSale: input })),
  setTokenAddress: (input) => set((state) => ({ tokenAddress: input })),
  setmaximumBuy: (input) => set((state) => ({ maximumBuy: input })),
  setRouter: () => set((state) => ({ Router: "PancakeSwap" })),
});

export default subscriptionPoolSlice;
